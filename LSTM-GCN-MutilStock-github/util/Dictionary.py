'''
code 账户股指代码
start_time 开始时间
end_time 结束时间 格式'2020-04-20 09:30:00','2020-12-04 14:59:00')
feerate = 18/10000
one  每个指数300元
margin 10%的保证金
'''
# def __init__()

'''
width1 和width2 大于 cal效果好,可能是需要提前交易
譬如: width =240 width2=240 但是cal=240效果不好 cal=100效果就好

一、豆粕期货手续费和保证金
1手豆粕期货手续费0.75元，保证金1250元，
豆粕期货保证金比例5%，1手保证金1250元。计算方法：
1手保证金=豆粕现价×1手吨数×保证金比例
=2500×10×5%=1250元。

二、豆粕期货交易基础知识
1、豆粕期货手续费费：0.75元
2、豆粕波动一下（交易单位×最小变动价位）：10元。
3、豆粕期货交易单位：10吨 /手。
4、豆粕期货最小变动价位：1元/吨。
5、豆粕期货报价单位：元(人民币)/吨。
6、豆粕期货保证金比例和保证金：5%和1250元。
7、豆粕期货涨跌停幅度：上一交易日结算价4% 。
8、豆粕期货交易代码：M。
9、豆粕期货交易时间：
'''

""" 数据准备参数
width1为每个样本的分钟，需要大于width1
每个样本是nwidth1=int(width1/mintues)个数据
width2为间隔分钟，需要大于 mintues
间隔样本为 nwidth2 = int(width2/mintues) 个数据
预测间隔width2分钟后（有行情情况的width2分钟后，即周六周日，停盘等时间不计算在width2内）的价格，并隔width2分钟后卖出
如果股票，每天有效交易时间为 4个小时，即60*4 = 240分钟
数据下载
from util.DataDownloadTQ import DataTQ as DataTQ
mydata = DataTQ(mintues, False, [code], path0) 
SSE.600016 SZSE.000002 #SZSE.000729 #SZSE.000860 #CFFEX.IH2012
"""
import sys, os
sys.path.append(os.path.abspath('.'))
from util.Log import Log
import torch
import time
import argparse
class Dictionary():
    parser = argparse.ArgumentParser()
    parser.add_argument('--device', default=torch.device("cuda" if torch.cuda.is_available() else "cpu"), help='')
    ''' 交易参数'''
    # parser.add_argument('--epochs', type=int, default=200,help='Number of epochs to train.')
    parser.add_argument('--epochs', type=int, default=1,help='Number of epochs to train.')
    # parser.add_argument('--isOpenFan', default=0, help='')
    # parser.add_argument('--lower', default=0, help='')
    # parser.add_argument('--upper', default=29000, help='')
    parser.add_argument('--robber_open', default=0, help='')
    parser.add_argument('--robber_close', default=0, help='')

    '''手续费 #交易 成本（双边 本（双边 ） 18/10000
    100%的保证金
    股指300元，股票一手100#股指乘300，股票乘100，期货乘15等'''
    parser.add_argument('--margin', default=1, help='') 
    parser.add_argument('--nMultiplier', default=100, help='')
    _feeROpen = 3/10000+0.2/10000
    parser.add_argument('--feeROpen', default=_feeROpen, help='')  
    parser.add_argument('--feeRClose', default=_feeROpen+1/1000, help='')

    '''-5分钟后再交易
    每次成交量 9成仓位
    求传统指标如macd等输入序列的长度'''
    # parser.add_argument('--tradespantime', default=0, help='')
    # parser.add_argument('--volume_rate', default=0.2, help='')
    # parser.add_argument('--tra_len', default=60, help='')
    parser.add_argument('--isMultiDataTrain', default=True, help='')
    parser.add_argument('--closedayes', default=10, help='')
    parser.add_argument('--targetPoint', default=0.05, help='')
    # parser.add_argument('--loss', default=0.05, help='')
    parser.add_argument('--benefit', default= 0.05, help='')
    '''输入width1根K线, 每根k线1分钟。单位klines个数，看最大45和最小5两个极端情况
    输入数据中的通道个数 分钟线'''
    # parser.add_argument('--width1', default=211, help='')
    # parser.add_argument('--width2', default=2, help='')
    '''# 输入数据中的通道个数 日线'''
    parser.add_argument('--width1', default=12, help='')
    parser.add_argument('--width2', default=1, help='')
    # parser.add_argument('--numOpen_stock', default=1, help='')
    parser.add_argument('--cashPerStock', default=300000, help='')
    args = parser.parse_args()

    # 所有股票的总收益
    profitMinus, profitPlus, profits, fees = 0, 0, 0, 0
    balanceChange = dict()
    costs_max, costs_min, costs_mean=[], [], []
    # 每股收益
    profitpercode = dict()
    code_times = dict()
    code_indexs = dict()
    code_short_long = dict()
    # codes = []
    errCodes =[]

    # codes_1 = [
    #     # 下面的一行是数据没有下载到本地的
    #     "SZSE.300750", "SZSE.002594", "SZSE.000858", "SZSE.300059", "SZSE.300760", "SSE.601668",
    #     "SSE.600519", "SSE.601012", "SSE.600036", "SSE.600309", 
    #     "SZSE.002475", "SSE.601888", "SZSE.002812", "SSE.603501",
    #     "SSE.601899", "SSE.601318", "SZSE.000725", "SSE.603259", "SZSE.002352", "SSE.600276", "SSE.600585", "SSE.600900",
    #     "SSE.601166", "SZSE.000001", "SZSE.300015",  "SSE.600436", "SSE.601919", "SZSE.300122", "SSE.603288", "SSE.600031",
    #     "SSE.601398", "SSE.600809", "SSE.600030", "SSE.600000", "SZSE.000568", "SZSE.002142", "SZSE.002714", "SSE.600028", "SZSE.000002", "SSE.601088",
    #     "SSE.601288", "SZSE.002304", "SSE.600887", "SSE.600048", "SSE.601601", "SSE.601328", "SSE.600050", 
    #     "SZSE.002027", 
    #     "SSE.601985"]

    # codes = ['SSE.600000', 'SSE.600009', 'SSE.600010', 'SSE.600011', 'SSE.600015', 'SSE.600016', 'SSE.600018', 'SSE.600025', 'SSE.600028', 'SSE.600029', 
    #     'SSE.600030', 'SSE.600031', 'SSE.600036', 'SSE.600048', 'SSE.600050', 'SSE.600061', 'SSE.600079', 'SSE.600085', 'SSE.600104', 'SSE.600109', 
    #     'SSE.600111', 'SSE.600115', 'SSE.600118', 'SSE.600143', 'SSE.600150', 'SSE.600161', 'SSE.600176', 'SSE.600183', 'SSE.600196', 'SSE.600233', 
    #     'SSE.600276', 'SSE.600309', 'SSE.600332', 'SSE.600340', 'SSE.600346', 'SSE.600352', 'SSE.600362', 'SSE.600383', 'SSE.600406', 'SSE.600426', 
    #     'SSE.600436', 'SSE.600438', 'SSE.600482', 'SSE.600489', 'SSE.600519', 'SSE.600521', 'SSE.600522', 'SSE.600547', 'SSE.600570', 'SSE.600584', 
    #     'SSE.600585', 'SSE.600588', 'SSE.600600', 'SSE.600655', 'SSE.600660', 'SSE.600703', 'SSE.600741', 'SSE.600745', 'SSE.600760', 'SSE.600763', 
    #     'SSE.600795', 'SSE.600809', 'SSE.600845', 'SSE.600848', 'SSE.600872', 'SSE.600886', 'SSE.600887', 'SSE.600893', 'SSE.600900', 'SSE.600918', 
    #     'SSE.600919', 'SSE.600926', 'SSE.600958', 'SSE.600989', 'SSE.601012', 'SSE.601021', 'SSE.601066', 'SSE.601077', 'SSE.601088', 'SSE.601100', 
    #     'SSE.601108', 'SSE.601111', 'SSE.601138', 'SSE.601155', 'SSE.601162', 'SSE.601166', 'SSE.601169', 'SSE.601186', 'SSE.601211', 'SSE.601216', 
    #     'SSE.601225', 'SSE.601231', 'SSE.601236', 'SSE.601238', 'SSE.601288', 'SSE.601318', 'SSE.601319', 'SSE.601328', 'SSE.601336', 'SSE.601377', 
    #     'SSE.601390', 'SSE.601398', 'SSE.601555', 'SSE.601600', 'SSE.601601', 'SSE.601607', 'SSE.601628', 'SSE.601633', 'SSE.601688', 'SSE.601696', 
    #     'SSE.601698', 'SSE.601727', 'SSE.601766', 'SSE.601788', 'SSE.601799', 'SSE.601800', 'SSE.601808', 'SSE.601816', 'SSE.601818', 'SSE.601838', 
    #     'SSE.601857', 'SSE.601872', 'SSE.601877', 'SSE.601878', 'SSE.601881', 'SSE.601888', 'SSE.601899', 'SSE.601916', 'SSE.601919', 'SSE.601939', 
    #     'SSE.601985', 'SSE.601989', 'SSE.601990', 'SSE.601995', 'SSE.603087', 'SSE.603160', 'SSE.603233', 'SSE.603259', 'SSE.603288', 'SSE.603369', 
    #     'SSE.603392', 'SSE.603501', 'SSE.603517', 'SSE.603658', 'SSE.603659', 'SSE.603799', 'SSE.603806', 'SSE.603833', 'SSE.603882', 'SSE.603939', 
    #     'SSE.603986', 'SSE.688008', 'SSE.688012', 'SSE.688036', 'SSE.688111', 'SSE.688126', 'SSE.688169', 'SSE.688363', 
    #     'SZSE.000001', 'SZSE.000002', 'SZSE.000063', 'SZSE.000066', 'SZSE.000069', 'SZSE.000100', 'SZSE.000157', 'SZSE.000166', 'SZSE.000333', 'SZSE.000338', 
    #     'SZSE.000425', 'SZSE.000538', 'SZSE.000568', 'SZSE.000596', 'SZSE.000651', 'SZSE.000656', 'SZSE.000661', 'SZSE.000703', 'SZSE.000725', 'SZSE.000728', 
    #     'SZSE.000768', 'SZSE.000776', 'SZSE.000786', 'SZSE.000800', 'SZSE.000860', 'SZSE.000876', 'SZSE.000895', 'SZSE.000938', 'SZSE.000963', 'SZSE.000977', 
    #     'SZSE.001979', 'SZSE.002001', 'SZSE.002007', 'SZSE.002008', 'SZSE.002027', 'SZSE.002049', 'SZSE.002050', 'SZSE.002129', 'SZSE.002142', 'SZSE.002153', 
    #     'SZSE.002157', 'SZSE.002202', 'SZSE.002230', 'SZSE.002241', 'SZSE.002252', 'SZSE.002271', 'SZSE.002304', 'SZSE.002311', 'SZSE.002352', 'SZSE.002371', 
    #     'SZSE.002384', 'SZSE.002410', 'SZSE.002414', 'SZSE.002415', 'SZSE.002456', 'SZSE.002460', 'SZSE.002463', 'SZSE.002475', 'SZSE.002508', 'SZSE.002555', 
    #     'SZSE.002558', 'SZSE.002600', 'SZSE.002601', 'SZSE.002602', 'SZSE.002607', 'SZSE.002624', 'SZSE.002673', 'SZSE.002714', 'SZSE.002736', 'SZSE.002739', 
    #     'SZSE.002773', 'SZSE.002812', 'SZSE.002821', 'SZSE.002841', 'SZSE.002916', 'SZSE.002938', 'SZSE.002939', 'SZSE.002945', 'SZSE.300003', 'SZSE.300014', 
    #     'SZSE.300015', 'SZSE.300033', 'SZSE.300122', 'SZSE.300124', 'SZSE.300142', 'SZSE.300144', 'SZSE.300274', 'SZSE.300408', 'SZSE.300413', 'SZSE.300433', 
    #     'SZSE.300450', 'SZSE.300498', 'SZSE.300529', 'SZSE.300558', 'SZSE.300595', 'SZSE.300628', 'SZSE.300676', 'SZSE.300677']
    # # 去除 数据长度不够的股票代码 173
    # codes1 = ['SSE.600000', 'SSE.600009', 'SSE.600011', 'SSE.600015', 'SSE.600016', 'SSE.600018', 'SSE.600025', 'SSE.600028', 'SSE.600029', 'SSE.600031', 
    #     'SSE.600036', 'SSE.600048', 'SSE.600050', 'SSE.600061', 'SSE.600085', 'SSE.600104', 'SSE.600109', 'SSE.600111', 'SSE.600115', 'SSE.600118', 
    #     'SSE.600143', 'SSE.600161', 'SSE.600176', 'SSE.600183', 'SSE.600196', 'SSE.600233', 'SSE.600276', 'SSE.600340', 'SSE.600346', 'SSE.600352', 
    #     'SSE.600362', 'SSE.600383', 'SSE.600406', 'SSE.600426', 'SSE.600436', 'SSE.600438', 'SSE.600519', 'SSE.600521', 'SSE.600522', 'SSE.600547', 
    #     'SSE.600570', 'SSE.600584', 'SSE.600585', 'SSE.600588', 'SSE.600600', 'SSE.600660', 'SSE.600703', 'SSE.600741', 'SSE.600760', 'SSE.600763', 
    #     'SSE.600795', 'SSE.600845', 'SSE.600872', 'SSE.600886', 'SSE.600887', 'SSE.600900', 'SSE.600919', 'SSE.600926', 'SSE.600958', 'SSE.601021', 
    #     'SSE.601088', 'SSE.601100', 'SSE.601108', 'SSE.601155', 'SSE.601166', 'SSE.601169', 'SSE.601186', 'SSE.601211', 'SSE.601225', 'SSE.601238', 
    #     'SSE.601288', 'SSE.601318', 'SSE.601328', 'SSE.601336', 'SSE.601377', 'SSE.601398', 'SSE.601601', 'SSE.601607', 'SSE.601628', 'SSE.601633', 
    #     'SSE.601688', 'SSE.601766', 'SSE.601788', 'SSE.601799', 'SSE.601800', 'SSE.601808', 'SSE.601818', 'SSE.601857', 'SSE.601872', 'SSE.601877', 
    #     'SSE.601878', 'SSE.601881', 'SSE.601888', 'SSE.601919', 'SSE.601939', 'SSE.601985', 'SSE.601989', 'SSE.603160', 'SSE.603233', 'SSE.603288', 
    #     'SSE.603369', 'SSE.603517', 'SSE.603658', 'SSE.603806', 'SSE.603833', 'SSE.603882', 
    #     'SZSE.000001', 'SZSE.000002', 'SZSE.000066', 'SZSE.000069', 'SZSE.000100', 'SZSE.000157', 'SZSE.000166', 'SZSE.000338', 'SZSE.000425', 'SZSE.000568', 
    #     'SZSE.000596', 'SZSE.000656', 'SZSE.000725', 'SZSE.000728', 'SZSE.000768', 'SZSE.000776', 'SZSE.000786', 'SZSE.000860', 'SZSE.000876', 'SZSE.000963', 
    #     'SZSE.002001', 'SZSE.002007', 'SZSE.002008', 'SZSE.002027', 'SZSE.002050', 'SZSE.002142', 'SZSE.002153', 'SZSE.002157', 'SZSE.002230', 'SZSE.002241', 
    #     'SZSE.002271', 'SZSE.002304', 'SZSE.002311', 'SZSE.002352', 'SZSE.002371', 'SZSE.002410', 'SZSE.002414', 'SZSE.002460', 'SZSE.002463', 'SZSE.002475', 
    #     'SZSE.002508', 'SZSE.002555', 'SZSE.002600', 'SZSE.002673', 'SZSE.002714', 'SZSE.002736', 'SZSE.002773', 'SZSE.002812', 'SZSE.002821', 'SZSE.002841', 
    #     'SZSE.300003', 'SZSE.300014', 'SZSE.300033', 'SZSE.300122', 'SZSE.300142', 'SZSE.300144', 'SZSE.300274', 'SZSE.300408', 'SZSE.300433', 'SZSE.300450', 
    #     'SZSE.300498', 'SZSE.300529', 'SZSE.300558', 'SZSE.300595', 'SZSE.300628', 'SZSE.300676', 'SZSE.300677']
    # # codes = ["SSE.601985"]
    # # a50股票
    # codes2 = ["SZSE.000001", "SZSE.000002", "SZSE.000568", "SZSE.000725", "SZSE.000776", "SZSE.000858", "SZSE.000917", "SZSE.002027", "SZSE.002352", 
    #     "SZSE.002466", "SZSE.002475", "SZSE.002594", "SZSE.002812", "SZSE.300015", "SZSE.300059", "SZSE.300122", "SZSE.300498", "SZSE.300750", 
    #     "SZSE.300760", "SSE.600000", "SSE.600028", "SSE.600030", "SSE.600031", "SSE.600036", "SSE.600048", "SSE.600276", "SSE.600309", "SSE.600436", 
    #     "SSE.600519", "SSE.600585", "SSE.600809", "SSE.600809", "SSE.600887", "SSE.600900", "SSE.601012", "SSE.601088", "SSE.601166", "SSE.601166", 
    #     "SSE.601318", "SSE.601398", "SSE.601658", "SSE.601888", "SSE.601899", "SSE.601919", "SSE.601939", "SSE.601985", "SSE.603259", "SSE.603288", 
    #     "SSE.603501"]
    # 沪深300
    codes_hs300 = ['SZSE.000001','SZSE.000002','SZSE.000063','SZSE.000066','SZSE.000069','SZSE.000100','SZSE.000157','SZSE.000166','SZSE.000333','SZSE.000338',
        'SZSE.000425','SZSE.000538','SZSE.000568','SZSE.000596','SZSE.000625','SZSE.000651','SZSE.000656','SZSE.000661','SZSE.000703','SZSE.000708','SZSE.000725',
        'SZSE.000728','SZSE.000768','SZSE.000776','SZSE.000783','SZSE.000786','SZSE.000800','SZSE.000858','SZSE.000860','SZSE.000876','SZSE.000895','SZSE.000938',
        'SZSE.000963','SZSE.000977','SZSE.001979','SZSE.002001','SZSE.002007','SZSE.002008','SZSE.002024','SZSE.002027','SZSE.002032','SZSE.002044','SZSE.002049',
        'SZSE.002050','SZSE.002120','SZSE.002129','SZSE.002142','SZSE.002153','SZSE.002157','SZSE.002179','SZSE.002202','SZSE.002230','SZSE.002236','SZSE.002241',
        'SZSE.002252','SZSE.002271','SZSE.002304','SZSE.002311','SZSE.002352','SZSE.002371','SZSE.002384','SZSE.002410','SZSE.002414','SZSE.002415','SZSE.002456',
        'SZSE.002460','SZSE.002463','SZSE.002475','SZSE.002493','SZSE.002508','SZSE.002555','SZSE.002558','SZSE.002594','SZSE.002600','SZSE.002601','SZSE.002602',
        'SZSE.002607','SZSE.002624','SZSE.002673','SZSE.002714','SZSE.002736','SZSE.002739','SZSE.002773','SZSE.002812','SZSE.002821','SZSE.002841','SZSE.002916',
        'SZSE.002938','SZSE.002939','SZSE.002945','SZSE.003816','SZSE.300003','SZSE.300014','SZSE.300015','SZSE.300033','SZSE.300059','SZSE.300122','SZSE.300124',
        'SZSE.300136','SZSE.300142','SZSE.300144','SZSE.300274','SZSE.300347','SZSE.300408','SZSE.300413','SZSE.300433','SZSE.300450','SZSE.300498','SZSE.300529',
        'SZSE.300558','SZSE.300595','SZSE.300601','SZSE.300628','SZSE.300676','SZSE.300677',
        'SSE.600000','SSE.600009','SSE.600010','SSE.600011','SSE.600015','SSE.600016','SSE.600018','SSE.600019','SSE.600025','SSE.600028','SSE.600029','SSE.600030',
        'SSE.600031','SSE.600036','SSE.600048','SSE.600050','SSE.600061','SSE.600079','SSE.600085','SSE.600104','SSE.600109','SSE.600111','SSE.600115','SSE.600118',
        'SSE.600132','SSE.600143','SSE.600150','SSE.600161','SSE.600176','SSE.600183','SSE.600196','SSE.600233','SSE.600276','SSE.600299','SSE.600309','SSE.600332',
        'SSE.600340','SSE.600346','SSE.600352','SSE.600362','SSE.600383','SSE.600406','SSE.600426','SSE.600436','SSE.600438','SSE.600482','SSE.600489','SSE.600519',
        'SSE.600521','SSE.600522','SSE.600547','SSE.600570','SSE.600584','SSE.600585','SSE.600588','SSE.600600','SSE.600606','SSE.600655','SSE.600660','SSE.600690',
        'SSE.600703','SSE.600705','SSE.600741','SSE.600745','SSE.600760','SSE.600763','SSE.600795','SSE.600809','SSE.600837','SSE.600845','SSE.600848','SSE.600872',
        'SSE.600886','SSE.600887','SSE.600893','SSE.600900','SSE.600918','SSE.600919','SSE.600926','SSE.600958','SSE.600989','SSE.600999','SSE.601006','SSE.601009',
        'SSE.601012','SSE.601021','SSE.601066','SSE.601077','SSE.601088','SSE.601100','SSE.601108','SSE.601111','SSE.601138','SSE.601155','SSE.601162','SSE.601166',
        'SSE.601169','SSE.601186','SSE.601211','SSE.601216','SSE.601225','SSE.601229','SSE.601231','SSE.601236','SSE.601238','SSE.601288','SSE.601318','SSE.601319',
        'SSE.601328','SSE.601336','SSE.601360','SSE.601377','SSE.601390','SSE.601398','SSE.601555','SSE.601600','SSE.601601','SSE.601607','SSE.601618','SSE.601628',
        'SSE.601633','SSE.601658','SSE.601668','SSE.601669','SSE.601688','SSE.601696','SSE.601698','SSE.601727','SSE.601766','SSE.601788','SSE.601799','SSE.601800',
        'SSE.601808','SSE.601816','SSE.601818','SSE.601838','SSE.601857','SSE.601872','SSE.601877','SSE.601878','SSE.601881','SSE.601888','SSE.601899','SSE.601901',
        'SSE.601916','SSE.601919','SSE.601933','SSE.601939','SSE.601985','SSE.601988','SSE.601989','SSE.601990','SSE.601995','SSE.601998','SSE.603019','SSE.603087',
        'SSE.603160','SSE.603195','SSE.603233','SSE.603259','SSE.603288','SSE.603338','SSE.603369','SSE.603392','SSE.603501','SSE.603517','SSE.603658','SSE.603659',
        'SSE.603799','SSE.603806','SSE.603833','SSE.603882','SSE.603899','SSE.603939','SSE.603986','SSE.603993','SSE.688008','SSE.688009','SSE.688012','SSE.688036',
        'SSE.688111','SSE.688126','SSE.688169','SSE.688363','SSE.688396']
        # 不在沪深300中的A50
        # 'SZSE.300750','SZSE.300760','SZSE.002466','SZSE.000917']
    codes_name_hs300 =['平安银行','万科Ａ','中兴通讯','中国长城','华侨城Ａ','TCL科技','中联重科','申万宏源','美的集团','潍柴动力',
        '徐工机械','云南白药','泸州老窖','古井贡酒','长安汽车','格力电器','金科股份','长春高新','恒逸石化','中信特钢','京东方Ａ',
        '国元证券','中航西飞','广发证券','长江证券','北新建材','一汽解放','五粮液','顺鑫农业','新希望','双汇发展','紫光股份',
        '华东医药','浪潮信息','招商蛇口','新和成','华兰生物','大族激光','苏宁易购','分众传媒','苏泊尔','美年健康','紫光国微',
        '三花智控','韵达股份','中环股份','宁波银行','石基信息','正邦科技','中航光电','金风科技','科大讯飞','大华股份','歌尔股份',
        '上海莱士','东方雨虹','洋河股份','海大集团','顺丰控股','北方华创','东山精密','广联达','高德红外','海康威视','欧菲光',
        '赣锋锂业','沪电股份','立讯精密','荣盛石化','老板电器','三七互娱','巨人网络','比亚迪','领益智造','龙蟒佰利','世纪华通',
        '中公教育','完美世界','西部证券','牧原股份','国信证券','万达电影','康弘药业','恩捷股份','凯莱英','视源股份','深南电路',
        '鹏鼎控股','长城证券','华林证券','中国广核','乐普医疗','亿纬锂能','爱尔眼科','同花顺','东方财富','智飞生物','汇川技术',
        '信维通信','沃森生物','宋城演艺','阳光电源','泰格医药','三环集团','芒果超媒','蓝思科技','先导智能','温氏股份','健帆生物',
        '贝达药业','欧普康视','康泰生物','亿联网络','华大基因','英科医疗',
        '浦发银行','上海机场','包钢股份','华能国际','华夏银行','民生银行','上港集团','宝钢股份','华能水电','中国石化','南方航空','中信证券',
        '三一重工','招商银行','保利地产','中国联通','国投资本','人福医药','同仁堂','上汽集团','国金证券','北方稀土','中国东航','中国卫星',
        '重庆啤酒','金发科技','中国船舶','天坛生物','中国巨石','生益科技','复星医药','圆通速递','恒瑞医药','安迪苏','万华化学','白云山',
        '华夏幸福','恒力石化','浙江龙盛','江西铜业','金地集团','国电南瑞','华鲁恒升','片仔癀','通威股份','中国动力','中金黄金','贵州茅台',
        '华海药业','中天科技','山东黄金','恒生电子','长电科技','海螺水泥','用友网络','青岛啤酒','绿地控股','豫园股份','福耀玻璃','海尔智家',
        '三安光电','中航资本','华域汽车','闻泰科技','中航沈飞','通策医疗','国电电力','山西汾酒','海通证券','宝信软件','上海临港','中炬高新',
        '国投电力','伊利股份','航发动力','长江电力','中泰证券','江苏银行','杭州银行','东方证券','宝丰能源','招商证券','大秦铁路','南京银行',
        '隆基股份','春秋航空','中信建投','渝农商行','中国神华','恒立液压','财通证券','中国国航','工业富联','新城控股','天风证券','兴业银行',
        '北京银行','中国铁建','国泰君安','君正集团','陕西煤业','上海银行','环旭电子','红塔证券','广汽集团','农业银行','中国平安','中国人保',
        '交通银行','新华保险','三六零','兴业证券','中国中铁','工商银行','东吴证券','中国铝业','中国太保','上海医药','中国中冶','中国人寿',
        '长城汽车','邮储银行','中国建筑','中国电建','华泰证券','中银证券','中国卫通','上海电气','中国中车','光大证券','星宇股份','中国交建',
        '中海油服','京沪高铁','光大银行','成都银行','中国石油','招商轮船','正泰电器','浙商证券','中国银河','中国中免','紫金矿业','方正证券',
        '浙商银行','中远海控','永辉超市','建设银行','中国核电','中国银行','中国重工','南京证券','中金公司','中信银行','中科曙光','甘李药业',
        '汇顶科技','公牛集团','大参林','药明康德','海天味业','浙江鼎力','今世缘','万泰生物','韦尔股份','绝味食品','安图生物','璞泰来',
        '华友钴业','福斯特','欧派家居','金域医学','晨光文具','益丰药房','兆易创新','洛阳钼业','澜起科技','中国通号','中微公司','传音控股',
        '金山办公','沪硅产业','石头科技','华熙生物','华润微']
        # 不在沪深300中的A50
        # '宁德时代','迈瑞医疗','天齐锂业','电广传媒']
    codes_a50 = ['SZSE.000001','SZSE.000002','SZSE.000568','SZSE.000725','SZSE.000776','SZSE.000858','SZSE.000917','SZSE.002027','SZSE.002352','SZSE.002466',
        'SZSE.002475','SZSE.002594','SZSE.002812','SZSE.300015','SZSE.300059','SZSE.300122','SZSE.300498','SZSE.300750','SZSE.300760',
        'SSE.600000','SSE.600028','SSE.600030','SSE.600031','SSE.600036','SSE.600048','SSE.600276','SSE.600309','SSE.600436','SSE.600519',
        'SSE.600585','SSE.600809','SSE.600887','SSE.600900','SSE.601012','SSE.601088','SSE.601166','SSE.601318',
        'SSE.601398','SSE.601658','SSE.601888','SSE.601899','SSE.601919','SSE.601939','SSE.601985','SSE.603259','SSE.603288','SSE.603501']
    codes_a50_nosuspension = ['SSE.600000', 'SSE.600028', 'SSE.600031', 'SSE.600036', 'SSE.600048', 'SSE.600276', 'SSE.600436', 'SSE.600519', 'SSE.600585', 
        'SSE.600887', 'SSE.600900', 'SSE.601088', 'SSE.601166', 'SSE.601318', 'SSE.601398', 'SSE.601888', 'SSE.601919', 'SSE.601939', 'SSE.601985', 'SSE.603288', 
        'SZSE.000001', 'SZSE.000002', 'SZSE.000568', 'SZSE.000725', 'SZSE.000776', 'SZSE.000858', 'SZSE.000917', 'SZSE.002027', 'SZSE.002352', 'SZSE.002475', 
        'SZSE.002594', 'SZSE.002812', 'SZSE.300059', 'SZSE.300122', 'SZSE.300498']
    codes_78 = ['SZSE.000001','SZSE.000100','SZSE.000338','SZSE.000425','SZSE.000568','SZSE.000596','SZSE.000768','SZSE.000860',\
        'SZSE.002007','SZSE.002008','SZSE.002050','SZSE.002153','SZSE.002241','SZSE.002271','SZSE.002304','SZSE.002311',\
        'SZSE.002352','SZSE.002371','SZSE.002410','SZSE.002414','SZSE.002460','SZSE.002475','SZSE.002508','SZSE.002555',\
        'SZSE.002600','SZSE.002714','SZSE.002812','SZSE.002821','SZSE.002841','SZSE.300014','SZSE.300033','SZSE.300122',\
        'SZSE.300142','SZSE.300274','SZSE.300408','SZSE.300433','SZSE.300450','SZSE.300529','SZSE.300558','SZSE.300595',\
        'SZSE.300628','SZSE.300676','SZSE.300677','SSE.600031','SSE.600111','SSE.600143','SSE.600176','SSE.600183',\
        'SSE.600196','SSE.600346','SSE.600406','SSE.600426','SSE.600436','SSE.600438','SSE.600519','SSE.600521','SSE.600588','SSE.600660','SSE.600703','SSE.600741','SSE.600763','SSE.600845','SSE.600872','SSE.600926','SSE.601100','SSE.601633','SSE.601799','SSE.601872','SSE.601877','SSE.601888','SSE.601919','SSE.603233','SSE.603288','SSE.603369','SSE.603517','SSE.603658','SSE.603806','SSE.603882']
    codes = codes_a50_nosuspension
    # codes = codes_a50
    # codes = codes_hs300

    # 日线数据
    # 600031_day
    filename = "D:\pythoncode\data1114\data-stock20230312-a50-day\{}_day.csv"
    # filename = "D:\pythoncode\data1114\data-stock20230216-day-78/{}_day.csv"
    # filename = "D:\pythoncode\data1114\data-stock20230731-hs300-day/{}_day.csv"
    # 分钟数据
    # filename = "D:\pythoncode\data1114\data-stock20220213/{}_sec60.csv"

    def initParameter(code):
        Dictionary.code = code
    def initLog():
        code = Dictionary.code
        _now = time.strftime("%Y%m%d%H%M%S")
        _log_filename = "code{}-width{}-{}-tar{}-{}.log".format(code, Dictionary.args.width1, \
            Dictionary.args.width2, Dictionary.args.targetPoint, _now)
        Dictionary.log = Log(_log_filename)
        Dictionary.log.info(Dictionary.args)
